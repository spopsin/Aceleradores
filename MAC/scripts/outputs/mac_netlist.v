
// Generated by Cadence Genus(TM) Synthesis Solution 23.12-s086_1
// Generated on: Sep 22 2025 11:09:22 -03 (Sep 22 2025 14:09:22 UTC)

// Verification Directory fv/mac_Nbits 

module m_mult_N18(W, X, Out);
  input [17:0] W, X;
  output [35:0] Out;
  wire [17:0] W, X;
  wire [35:0] Out;
endmodule

module rca_Nbits_N36(A, B, S, Cout);
  input [35:0] A, B;
  output [35:0] S;
  output Cout;
  wire [35:0] A, B;
  wire [35:0] S;
  wire Cout;
  wire n_0, n_2, n_4, n_6, n_8, n_10, n_12, n_14;
  wire n_16, n_18, n_20, n_22, n_24, n_26, n_28, n_30;
  wire n_32, n_34, n_36, n_38, n_40, n_42, n_44, n_46;
  wire n_48, n_50, n_52, n_54, n_56, n_58, n_60, n_62;
  wire n_64, n_66, n_68, n_70;
  XNOR2X1 g2349__2398(.A (B[35]), .B (n_70), .Y (S[35]));
  XNOR2X1 g2350__5107(.A (A[35]), .B (n_68), .Y (n_70));
  ADDFX1 g2351__6260(.A (A[34]), .B (B[34]), .CI (n_66), .CO (n_68), .S
       (S[34]));
  ADDFX1 g2352__4319(.A (A[33]), .B (B[33]), .CI (n_64), .CO (n_66), .S
       (S[33]));
  ADDFX1 g2353__8428(.A (A[32]), .B (B[32]), .CI (n_62), .CO (n_64), .S
       (S[32]));
  ADDFX1 g2354__5526(.A (A[31]), .B (B[31]), .CI (n_60), .CO (n_62), .S
       (S[31]));
  ADDFX1 g2355__6783(.A (A[30]), .B (B[30]), .CI (n_58), .CO (n_60), .S
       (S[30]));
  ADDFX1 g2356__3680(.A (A[29]), .B (B[29]), .CI (n_56), .CO (n_58), .S
       (S[29]));
  ADDFX1 g2357__1617(.A (A[28]), .B (B[28]), .CI (n_54), .CO (n_56), .S
       (S[28]));
  ADDFX1 g2358__2802(.A (A[27]), .B (B[27]), .CI (n_52), .CO (n_54), .S
       (S[27]));
  ADDFX1 g2359__1705(.A (A[26]), .B (B[26]), .CI (n_50), .CO (n_52), .S
       (S[26]));
  ADDFX1 g2360__5122(.A (A[25]), .B (B[25]), .CI (n_48), .CO (n_50), .S
       (S[25]));
  ADDFX1 g2361__8246(.A (A[24]), .B (B[24]), .CI (n_46), .CO (n_48), .S
       (S[24]));
  ADDFX1 g2362__7098(.A (A[23]), .B (B[23]), .CI (n_44), .CO (n_46), .S
       (S[23]));
  ADDFX1 g2363__6131(.A (A[22]), .B (B[22]), .CI (n_42), .CO (n_44), .S
       (S[22]));
  ADDFX1 g2364__1881(.A (A[21]), .B (B[21]), .CI (n_40), .CO (n_42), .S
       (S[21]));
  ADDFX1 g2365__5115(.A (A[20]), .B (B[20]), .CI (n_38), .CO (n_40), .S
       (S[20]));
  ADDFX1 g2366__7482(.A (A[19]), .B (B[19]), .CI (n_36), .CO (n_38), .S
       (S[19]));
  ADDFX1 g2367__4733(.A (A[18]), .B (B[18]), .CI (n_34), .CO (n_36), .S
       (S[18]));
  ADDFX1 g2368__6161(.A (A[17]), .B (B[17]), .CI (n_32), .CO (n_34), .S
       (S[17]));
  ADDFX1 g2369__9315(.A (A[16]), .B (B[16]), .CI (n_30), .CO (n_32), .S
       (S[16]));
  ADDFX1 g2370__9945(.A (A[15]), .B (B[15]), .CI (n_28), .CO (n_30), .S
       (S[15]));
  ADDFX1 g2371__2883(.A (A[14]), .B (B[14]), .CI (n_26), .CO (n_28), .S
       (S[14]));
  ADDFX1 g2372__2346(.A (A[13]), .B (B[13]), .CI (n_24), .CO (n_26), .S
       (S[13]));
  ADDFX1 g2373__1666(.A (A[12]), .B (B[12]), .CI (n_22), .CO (n_24), .S
       (S[12]));
  ADDFX1 g2374__7410(.A (A[11]), .B (B[11]), .CI (n_20), .CO (n_22), .S
       (S[11]));
  ADDFX1 g2375__6417(.A (A[10]), .B (B[10]), .CI (n_18), .CO (n_20), .S
       (S[10]));
  ADDFX1 g2376__5477(.A (A[9]), .B (B[9]), .CI (n_16), .CO (n_18), .S
       (S[9]));
  ADDFX1 g2377__2398(.A (A[8]), .B (B[8]), .CI (n_14), .CO (n_16), .S
       (S[8]));
  ADDFX1 g2378__5107(.A (A[7]), .B (B[7]), .CI (n_12), .CO (n_14), .S
       (S[7]));
  ADDFX1 g2379__6260(.A (A[6]), .B (B[6]), .CI (n_10), .CO (n_12), .S
       (S[6]));
  ADDFX1 g2380__4319(.A (A[5]), .B (B[5]), .CI (n_8), .CO (n_10), .S
       (S[5]));
  ADDFX1 g2381__8428(.A (A[4]), .B (B[4]), .CI (n_6), .CO (n_8), .S
       (S[4]));
  ADDFX1 g2382__5526(.A (A[3]), .B (B[3]), .CI (n_4), .CO (n_6), .S
       (S[3]));
  ADDFX1 g2383__6783(.A (A[2]), .B (B[2]), .CI (n_2), .CO (n_4), .S
       (S[2]));
  ADDFX1 g2384__3680(.A (A[1]), .B (B[1]), .CI (n_0), .CO (n_2), .S
       (S[1]));
  AOI2BB1X1 g2385__1617(.A0N (A[0]), .A1N (B[0]), .B0 (n_0), .Y (S[0]));
  AND2XL g2386__2802(.A (A[0]), .B (B[0]), .Y (n_0));
endmodule

module mac_Nbits(W, X, Rst, clk, En, Out);
  input [17:0] W, X;
  input Rst, clk, En;
  output [35:0] Out;
  wire [17:0] W, X;
  wire Rst, clk, En;
  wire [35:0] Out;
  wire [35:0] out_mult;
  wire [35:0] out_add;
  wire UNCONNECTED, n_0;
  m_mult_N18 m_mult_inst(.W (W), .X (X), .Out (out_mult));
  rca_Nbits_N36 rca_inst(.A (out_mult), .B (Out), .S (out_add), .Cout
       (UNCONNECTED));
  INVXL g39(.A (Rst), .Y (n_0));
  SDFFRHQX1 \AC_reg[19] (.RN (n_0), .CK (clk), .D (Out[19]), .SI
       (out_add[19]), .SE (En), .Q (Out[19]));
  SDFFRHQX1 \AC_reg[1] (.RN (n_0), .CK (clk), .D (Out[1]), .SI
       (out_add[1]), .SE (En), .Q (Out[1]));
  SDFFRHQX1 \AC_reg[12] (.RN (n_0), .CK (clk), .D (Out[12]), .SI
       (out_add[12]), .SE (En), .Q (Out[12]));
  SDFFRHQX1 \AC_reg[13] (.RN (n_0), .CK (clk), .D (Out[13]), .SI
       (out_add[13]), .SE (En), .Q (Out[13]));
  SDFFRHQX1 \AC_reg[14] (.RN (n_0), .CK (clk), .D (Out[14]), .SI
       (out_add[14]), .SE (En), .Q (Out[14]));
  SDFFRHQX1 \AC_reg[15] (.RN (n_0), .CK (clk), .D (Out[15]), .SI
       (out_add[15]), .SE (En), .Q (Out[15]));
  SDFFRHQX1 \AC_reg[16] (.RN (n_0), .CK (clk), .D (Out[16]), .SI
       (out_add[16]), .SE (En), .Q (Out[16]));
  SDFFRHQX1 \AC_reg[17] (.RN (n_0), .CK (clk), .D (Out[17]), .SI
       (out_add[17]), .SE (En), .Q (Out[17]));
  SDFFRHQX1 \AC_reg[18] (.RN (n_0), .CK (clk), .D (Out[18]), .SI
       (out_add[18]), .SE (En), .Q (Out[18]));
  SDFFRHQX1 \AC_reg[0] (.RN (n_0), .CK (clk), .D (Out[0]), .SI
       (out_add[0]), .SE (En), .Q (Out[0]));
  SDFFRHQX1 \AC_reg[2] (.RN (n_0), .CK (clk), .D (Out[2]), .SI
       (out_add[2]), .SE (En), .Q (Out[2]));
  SDFFRHQX1 \AC_reg[20] (.RN (n_0), .CK (clk), .D (Out[20]), .SI
       (out_add[20]), .SE (En), .Q (Out[20]));
  SDFFRHQX1 \AC_reg[21] (.RN (n_0), .CK (clk), .D (Out[21]), .SI
       (out_add[21]), .SE (En), .Q (Out[21]));
  SDFFRHQX1 \AC_reg[22] (.RN (n_0), .CK (clk), .D (Out[22]), .SI
       (out_add[22]), .SE (En), .Q (Out[22]));
  SDFFRHQX1 \AC_reg[23] (.RN (n_0), .CK (clk), .D (Out[23]), .SI
       (out_add[23]), .SE (En), .Q (Out[23]));
  SDFFRHQX1 \AC_reg[3] (.RN (n_0), .CK (clk), .D (Out[3]), .SI
       (out_add[3]), .SE (En), .Q (Out[3]));
  SDFFRHQX1 \AC_reg[24] (.RN (n_0), .CK (clk), .D (Out[24]), .SI
       (out_add[24]), .SE (En), .Q (Out[24]));
  SDFFRHQX1 \AC_reg[25] (.RN (n_0), .CK (clk), .D (Out[25]), .SI
       (out_add[25]), .SE (En), .Q (Out[25]));
  SDFFRHQX1 \AC_reg[32] (.RN (n_0), .CK (clk), .D (Out[32]), .SI
       (out_add[32]), .SE (En), .Q (Out[32]));
  SDFFRHQX1 \AC_reg[27] (.RN (n_0), .CK (clk), .D (Out[27]), .SI
       (out_add[27]), .SE (En), .Q (Out[27]));
  SDFFRHQX1 \AC_reg[4] (.RN (n_0), .CK (clk), .D (Out[4]), .SI
       (out_add[4]), .SE (En), .Q (Out[4]));
  SDFFRHQX1 \AC_reg[5] (.RN (n_0), .CK (clk), .D (Out[5]), .SI
       (out_add[5]), .SE (En), .Q (Out[5]));
  SDFFRHQX1 \AC_reg[28] (.RN (n_0), .CK (clk), .D (Out[28]), .SI
       (out_add[28]), .SE (En), .Q (Out[28]));
  SDFFRHQX1 \AC_reg[29] (.RN (n_0), .CK (clk), .D (Out[29]), .SI
       (out_add[29]), .SE (En), .Q (Out[29]));
  SDFFRHQX1 \AC_reg[30] (.RN (n_0), .CK (clk), .D (Out[30]), .SI
       (out_add[30]), .SE (En), .Q (Out[30]));
  SDFFRHQX1 \AC_reg[31] (.RN (n_0), .CK (clk), .D (Out[31]), .SI
       (out_add[31]), .SE (En), .Q (Out[31]));
  SDFFRHQX1 \AC_reg[6] (.RN (n_0), .CK (clk), .D (Out[6]), .SI
       (out_add[6]), .SE (En), .Q (Out[6]));
  SDFFRHQX1 \AC_reg[26] (.RN (n_0), .CK (clk), .D (Out[26]), .SI
       (out_add[26]), .SE (En), .Q (Out[26]));
  SDFFRHQX1 \AC_reg[33] (.RN (n_0), .CK (clk), .D (Out[33]), .SI
       (out_add[33]), .SE (En), .Q (Out[33]));
  SDFFRHQX1 \AC_reg[7] (.RN (n_0), .CK (clk), .D (Out[7]), .SI
       (out_add[7]), .SE (En), .Q (Out[7]));
  SDFFRHQX1 \AC_reg[34] (.RN (n_0), .CK (clk), .D (Out[34]), .SI
       (out_add[34]), .SE (En), .Q (Out[34]));
  SDFFRHQX1 \AC_reg[35] (.RN (n_0), .CK (clk), .D (Out[35]), .SI
       (out_add[35]), .SE (En), .Q (Out[35]));
  SDFFRHQX1 \AC_reg[8] (.RN (n_0), .CK (clk), .D (Out[8]), .SI
       (out_add[8]), .SE (En), .Q (Out[8]));
  SDFFRHQX1 \AC_reg[9] (.RN (n_0), .CK (clk), .D (Out[9]), .SI
       (out_add[9]), .SE (En), .Q (Out[9]));
  SDFFRHQX1 \AC_reg[10] (.RN (n_0), .CK (clk), .D (Out[10]), .SI
       (out_add[10]), .SE (En), .Q (Out[10]));
  SDFFRHQX1 \AC_reg[11] (.RN (n_0), .CK (clk), .D (Out[11]), .SI
       (out_add[11]), .SE (En), .Q (Out[11]));
endmodule

